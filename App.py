import streamlit as st
import os
import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ç—ë–º–Ω–æ–π —Ç–µ–º–æ–π
st.set_page_config(page_title="üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç–∫–∑–∞–º–µ–Ω–∞", page_icon="üìò", layout="wide")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–æ–Ω –∏ —Å—Ç–∏–ª–∏ (—Ç—ë–º–Ω–∞—è —Ç–µ–º–∞)
st.markdown("""
    <style>
        body {
            background-color: #1e1e2f;
            color: #f5f5f5;
        }
        .stApp {
            background-color: #1e1e2f;
        }
    </style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ ‚Äî –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∫–∞–∂–¥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ñ–∞–π–ª analytics_log.txt
def log_event():
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open("analytics_log.txt", "a") as f:
        f.write(f"{now} - –†–∞—Å—Å—á–∏—Ç–∞–Ω–æ\n")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
st.title("üìò –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞")
st.markdown("–í–≤–µ–¥–∏—Ç–µ –±–∞–ª–ª—ã –∑–∞ 4 –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–π –±–∞–ª–ª –Ω—É–∂–µ–Ω –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏.")
st.divider()

# –í–≤–æ–¥ –æ—Ü–µ–Ω–æ–∫ ‚Äì —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –ø–æ–ª—è –≤ 4 –∫–æ–ª–æ–Ω–∫–∏
st.subheader("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –±–∞–ª–ª—ã")
col1, col2, col3, col4 = st.columns(4)
with col1:
    e1 = st.number_input("–≠–∫–∑–∞–º–µ–Ω 1", min_value=0.0, max_value=100.0, value=0.0)
with col2:
    e2 = st.number_input("–≠–∫–∑–∞–º–µ–Ω 2", min_value=0.0, max_value=100.0, value=0.0)
with col3:
    e3 = st.number_input("–≠–∫–∑–∞–º–µ–Ω 3", min_value=0.0, max_value=100.0, value=0.0)
with col4:
    e4 = st.number_input("–≠–∫–∑–∞–º–µ–Ω 4", min_value=0.0, max_value=100.0, value=0.0)

st.divider()

# –†–∞—Å—á—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
if st.button("üìê –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"):
    log_event()  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥
    avg = (e1 + e2 + e3 + e4) / 4
    required_final = (70 - 0.4 * avg) / 0.6

    st.metric(label="–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª", value=f"{avg:.2f}")
    st.progress(min(avg, 100) / 100)

    if required_final > 100:
        st.error(f"‚ùå –î–∞–∂–µ 100 –±–∞–ª–ª–æ–≤ –Ω–µ —Ö–≤–∞—Ç–∏—Ç. –ù—É–∂–Ω–æ: **{required_final:.2f}**")
    elif required_final <= 0:
        st.success("‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏.")
        st.balloons()
    else:
        st.info(f"‚ÑπÔ∏è –ù—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å –º–∏–Ω–∏–º—É–º **{required_final:.2f}** –±–∞–ª–ª–æ–≤ –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —ç–∫–∑–∞–º–µ–Ω–µ.")

# –ë–ª–æ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–ª–æ–≥–æ–≤)
if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É"):
    password = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ", type="password")
    if password == "qweasd123":  # –ó–∞–º–µ–Ω–∏—Ç–µ "–º–æ–π—Å–µ–∫—Ä–µ—Ç" –Ω–∞ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
        if os.path.exists("analytics_log.txt"):
            with open("analytics_log.txt", "r") as f:
                logs = f.readlines()
            st.text(f"–í—Å–µ–≥–æ —Ä–∞—Å—á–µ—Ç–æ–≤: {len(logs)}")
            st.text_area("–õ–æ–≥–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", "".join(logs), height=200)
        else:
            st.info("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
    elif password:
        st.warning("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")
